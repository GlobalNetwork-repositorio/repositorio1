{"version":3,"sources":["webpack:///./app/diseno/ingresos/crud-ingresos/crud-ingresos.component.html","webpack:///./app/diseno/ingresos/crud-ingresos/crud-ingresos.component.ts","webpack:///./app/diseno/ingresos/ingresos-routing.module.ts","webpack:///./app/diseno/ingresos/ingresos.module.ts","webpack:///./app/diseno/ingresos/ingresos.service.ts","webpack:///./app/diseno/ingresos/lista-ingresos/lista-ingresos.component.html","webpack:///./app/diseno/ingresos/lista-ingresos/lista-ingresos.component.ts"],"names":[],"mappings":"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","file":"ingresos-ingresos-module.js","sourcesContent":["module.exports = \"        <div [@routerTransition]>\\n                <app-page-header [heading]=\\\"'Ingresos'\\\" [icon]=\\\"'fa-desktop'\\\"></app-page-header>\\n                <div [@routerTransition]>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col col-xl-12 col-lg-12\\\">\\n                      <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                          Nuevo Ingreso\\n                        </div>\\n                        <div class=\\\"card-header\\\">\\n\\n                            <form [formGroup]=\\\"form\\\">\\n                                <div class=\\\"row\\\">\\n                                  <div class=\\\"col-md-4\\\">\\n                                      <mat-form-field class=\\\"w-100\\\">\\n                                          <input matInput placeholder=\\\"Usuario\\\" formControlName=\\\"usuario\\\" readonly>\\n                                      </mat-form-field>\\n      \\n                                      <mat-form-field class=\\\"w-100\\\">\\n                                          <mat-select placeholder=\\\"Sucursal\\\" formControlName=\\\"sucursal\\\">\\n                                            <mat-option *ngFor=\\\"let sucursal of db_sucursal\\\" [value]=\\\"sucursal\\\">\\n                                              {{sucursal.descripcion}}\\n                                            </mat-option>\\n                                          </mat-select>\\n                                      </mat-form-field>\\n      \\n                                      <mat-form-field class=\\\"w-100\\\">\\n                                          <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Fecha\\\" formControlName=\\\"fecha\\\">\\n                                          <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                                          <mat-datepicker #picker></mat-datepicker>\\n                                      </mat-form-field>                                \\n                                  </div>\\n                                  \\n                                  <div class=\\\"col-md-8\\\">\\n      \\n                                    <mat-form-field class=\\\"w-100\\\">                                      \\n                                      <input matInput placeholder=\\\"Motivo\\\" [matAutocomplete]=\\\"auto\\\" formControlName=\\\"conceptoIngreso\\\" appCtrlAutocomplete [data]=\\\"db_concepto_ingreso\\\" etiqueta=\\\"descripcion\\\" (DatosFiltrados)=\\\"setAutoCompleteDatosFiltrados($event)\\\">\\n                                      <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFnAutoComplete\\\">\\n                                        <mat-option *ngFor=\\\"let concepto of concepto_ingreso_filter\\\" [value]=\\\"concepto\\\">\\n                                          <span>{{concepto.descripcion}}</span>\\n                                        </mat-option>\\n                                      </mat-autocomplete>\\n                                    </mat-form-field>\\n      \\n                                    <mat-form-field class=\\\"w-100\\\">\\n                                        <mat-select placeholder=\\\"Cuenta Origen\\\" formControlName=\\\"cuenta\\\">\\n                                          <mat-option *ngFor=\\\"let cuenta of db_cuenta\\\" [value]=\\\"cuenta\\\"> \\n                                            {{cuenta.banco}}\\n                                          </mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n      \\n                                    <mat-form-field class=\\\"w-100\\\">\\n                                        <mat-select placeholder=\\\"Medio de Pago\\\" formControlName=\\\"medioPago\\\">\\n                                          <mat-option *ngFor=\\\"let medio of db_medio_pago\\\" [value]=\\\"medio\\\">\\n                                            {{medio.descripcionMedioPago}}\\n                                          </mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n      \\n                                    <mat-form-field class=\\\"w-100\\\">\\n                                        <input type=\\\"number\\\" matInput placeholder=\\\"Importe\\\" formControlName=\\\"montoIngresado\\\">\\n                                    </mat-form-field>                                                          \\n                                    \\n                                    <mat-form-field class=\\\"w-100\\\">\\n                                        <textarea matInput placeholder=\\\"Escriba las especificiones\\\" formControlName=\\\"detalles\\\"></textarea>\\n                                    </mat-form-field>      \\n                                  </div>\\n      \\n                                </div>                          \\n                              </form>\\n                     \\n                          <hr>\\n                          <div>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"guardarCambios()\\\" [disabled]=\\\"!form.valid\\\">\\n                              <i *ngIf=\\\"procesando\\\" class=\\\"fa fa-spinner fa-spin fa-fw\\\"></i>\\n                              Guardar\\n                            </button>\\n                            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" [routerLink]=\\\"['../']\\\">Cancelar</button>\\n                          </div>                          \\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n         \"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { CrudService } from '../../services/service.index';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Usuario } from '../../usuarios/usuario.model';\nimport { Ingreso } from '../ingreso.model';\nimport { UsuariosService } from '../../usuarios/usuarios.service';\nimport swal from 'sweetalert2';\nimport { MSJ_SUCCESS } from '../../../config/config';\n\n\n\n@Component({\n  selector: 'app-crud-ingresos',\n  templateUrl: './crud-ingresos.component.html',\n  animations: [routerTransition()]  \n})\nexport class CrudIngresosComponent implements OnInit {\n   usuarioModel: Usuario = null;\n\n  db_cuenta: any;\n  db_concepto_ingreso: any [];\n  db_medio_pago: any;  \n  db_sucursal: any;\n  concepto_ingreso_filter: any []; // obtiene los valores filtrado del autocomplete\n\n  form: FormGroup;\n  procesando: boolean = false;\n\n  constructor(\n      private crudService: CrudService, \n      private usuarioService: UsuariosService,\n      private formBuilder: FormBuilder) { }\n\n  ngOnInit() {    \n    this.obtenerMaestros();       \n  }\n\n  setAutoCompleteDatosFiltrados(event: any): void { this.concepto_ingreso_filter = event; }\n  // muestra en el input la descripcion del objeto Concepto se utiliza con [displayWith]=\"displayFn\" en mat-autocomplete // sino obtendriamos [Object, Object]\n  displayFnAutoComplete(concepto?: any): string | undefined { return concepto ? concepto.descripcion : undefined; }\n  // Validators.required // valida lo escrito en el autocomplete, si no selecciona ningun opcion de la lista // devuelve string que no es valido.\n  private autocompleteSelectionValidator(control: FormControl) { return typeof control.value === 'string' ? { incorrect: {} } : null }\n\n  private obtenerMaestros(): void {\n    this.crudService.getAll('conceptoingreso', 'getall').subscribe(res => { this.db_concepto_ingreso = res; this.concepto_ingreso_filter=res;});\n    this.crudService.getAll('cuenta', 'getall').subscribe(res => this.db_cuenta = res);      \n    this.crudService.getAll('mediopago', 'getall').subscribe(res => this.db_medio_pago = res);\n    this.crudService.getAll('sucursal', 'getall').subscribe(res => this.db_sucursal = res);\n    this.usuarioModel = this.usuarioService.getUsuario();\n    \n    this.prepararFormulario();\n  }\n\n  private prepararFormulario(): void {\n    this.concepto_ingreso_filter = this.db_concepto_ingreso;\n    this.form = this.formBuilder.group({      \n        idIngreso: 0,\n        fecha: ['', Validators.required],\n        hora: '',\n        montoIngresado: ['', Validators.required],\n        conceptoIngreso: ['', this.autocompleteSelectionValidator],\n        cuenta: [this.db_cuenta, Validators.required],\n        medioPago: [this.db_medio_pago, Validators.required],        \n        sucursal:[this.usuarioModel.sucursal, Validators.required],\n        usuario: [this.usuarioModel.nombreApellido, Validators.required],      \n        detalles: ''          \n    });\n  }\n\n  guardarCambios(): void {\n    if (!this.form.valid || this.procesando) { return; }    \n    this.procesando = true;\n\n    this.form.value.fecha = Date.parse(this.form.value.fecha);\n    this.form.value.usuario = this.usuarioModel;    \n\n    console.log(this.form.value);\n    const Ingreso_model: Ingreso = <Ingreso> this.form.value;\n\n    this.crudService.create(Ingreso_model, 'ingreso', 'save').subscribe( res => {\n      setTimeout(() => {\n        this.prepararFormulario();\n        swal(MSJ_SUCCESS);\n        this.procesando = false;\n      }, 800);            \n    })\n  }\n\n}\n","// import { IngresosComponent } from './ingresos.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '../../shared';\r\n\r\nimport { ListaIngresosComponent } from './lista-ingresos/lista-ingresos.component';\r\nimport { CrudIngresosComponent } from './crud-ingresos/crud-ingresos.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: ListaIngresosComponent, \r\n        children: [\r\n            { path: 'crud-ingresos', component: CrudIngresosComponent }\r\n        ]\r\n    }    \r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class IngresosRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { IngresosRoutingModule } from './ingresos-routing.module';\r\nimport { PageHeaderModule } from '../../shared';\r\n\r\nimport { ListaIngresosComponent } from './lista-ingresos/lista-ingresos.component';\r\nimport { CrudIngresosComponent } from './crud-ingresos/crud-ingresos.component';\r\n\r\nimport { DataTableModule } from 'primeng/primeng';\r\nimport { TableModule } from 'primeng/table';\r\n\r\nimport { MatInputModule, MatDatepickerModule, MatNativeDateModule, MatSelectModule, MatAutocompleteModule } from '../materialize/materialize.index';\r\nimport { DirectivasModule } from '../directivas/directivas.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, IngresosRoutingModule, PageHeaderModule, FormsModule, ReactiveFormsModule, NgSelectModule, DataTableModule, TableModule\r\n        ,MatInputModule, MatDatepickerModule, MatNativeDateModule, MatSelectModule, MatAutocompleteModule, DirectivasModule],\r\n    declarations: [ListaIngresosComponent, CrudIngresosComponent]\r\n})\r\nexport class IngresosModule { }\r\n","import { Injectable } from '@angular/core';\nimport { Ingreso } from './ingreso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n\n  constructor() { }\n\n  buscar (Datos: Ingreso[], parametro: string): any {    \n    parametro = parametro.toLocaleLowerCase();\n\n    return Datos.map(x => {\n      const cadena = `${x.montoIngresado} \n          ${x.fecha} ${x.sucursal.descripcion} ${x.cuenta.banco}\n          ${x.conceptoIngreso.descripcion} ${x.medioPago.descripcionMedioPago}`.toLocaleLowerCase();\n          \n      return cadena.indexOf(parametro) !== -1 ? x : null;\n    });\n  }\n}\n","module.exports = \"<div [@routerTransition] [hidden]=\\\"showChild\\\">\\n    <app-page-header [heading]=\\\"'Ingresos'\\\" [icon]=\\\"'fa-desktop'\\\"></app-page-header>\\n    <div [@routerTransition]>\\n        <div class=\\\"row\\\">\\n                <div class=\\\"col col-xl-12 col-lg-12\\\">\\n                        <div class=\\\"card mb-3\\\">\\n                            <div class=\\\"card-header\\\">\\n                                Historial de Ingresos <i class=\\\"fa fa-search\\\" title=\\\"Buscar\\\" (click)=\\\"ShowBuqueda = !ShowBuqueda\\\"></i>\\n                                <div class=\\\"float-right\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" [routerLink]=\\\"['./crud-ingresos']\\\"\\n                                        (click)=\\\"ShowChild()\\\"> <i class=\\\"fa fa-plus-circle\\\"></i>  Nuevo Ingreso</button>\\n                                </div>\\n                            </div>\\n                                    \\n                            <p-dataTable  class=\\\"f-12\\\" emptyMessage=\\\"No hay registros\\\" [value]=\\\"db_ingreso\\\" [filterDelay]=500 [lazy]=\\\"true\\\" (onLazyLoad)=\\\"filter($event)\\\"\\n                                    selectionMode=\\\"single\\\" [responsive]=\\\"true\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\" [pageLinks]=\\\"5\\\" [rowsPerPageOptions]=\\\"[10,20,30]\\\">                                \\n                                <p-column field=\\\"fecha\\\"  header=\\\"Fecha\\\" [style]=\\\"{'width':'90px'}\\\" [filter]=\\\"ShowBuqueda\\\"></p-column>\\n                                <p-column field=\\\"montoIngresado\\\"  header=\\\"Monto\\\" [style]=\\\"{'width':'90px'}\\\" [filter]=\\\"ShowBuqueda\\\"></p-column>\\n                                <p-column field=\\\"sucursal.descripcion\\\" [style]=\\\"{'width':'150px'}\\\" header=\\\"Sucursal\\\" [filter]=\\\"ShowBuqueda\\\"></p-column>\\n                                <p-column field=\\\"cuenta.banco\\\"  header=\\\"Banco\\\" [filter]=\\\"ShowBuqueda\\\"></p-column>\\n                                <p-column field=\\\"conceptoIngreso.descripcion\\\"  header=\\\"Concepto\\\" [filter]=\\\"ShowBuqueda\\\"></p-column>\\n                                <p-column field=\\\"medioPago.descripcionMedioPago\\\" [style]=\\\"{'width':'120px'}\\\"  header=\\\"medio\\\" [filter]=\\\"ShowBuqueda\\\"></p-column>\\n                                <p-column [style]=\\\"{'width':'40px'}\\\">\\n                                    <ng-template let-data=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\n                                        <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\" title=\\\"Eliminar\\\" (click)=\\\"borrarRegistro(data)\\\"></i>\\n                                    </ng-template>\\n                                </p-column>\\n                            </p-dataTable>        \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"container\\\" >    \\n            <router-outlet (activate)='onActivate()' (deactivate)='onDeactivate()'></router-outlet>\\n        </div>\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { CrudService } from '../../services/crud.service';\nimport { Ingreso } from '../ingreso.model';\nimport { IngresosService } from '../ingresos.service';\nimport swal from 'sweetalert2';\nimport { MSJ_ALERT_BORRAR, MSJ_SUCCESS } from '../../../config/config';\n\n@Component({\n  selector: 'app-lista-ingresos',\n  templateUrl: './lista-ingresos.component.html',\n  animations: [routerTransition()]\n})\nexport class ListaIngresosComponent implements OnInit {\n\n  ingresoSModel: Ingreso[];\n  db_ingreso: any;\n  ShowBuqueda: boolean = false;\n  showChild: boolean = false;\n  totalRecords: number = 0;\n  filtrosActivos: any;\n\n  filtros: any = [{filtro: '', tag: true}];\n  constructor(private crudService: CrudService, private ingresoService: IngresosService) { }\n\n  ngOnInit() {\n    // this.getAll();\n  }\n\n  filter(e) {\n    this.filtrosActivos = e;     \n    this.refreshModel(this.filtrosActivos);    \n  }\n\n  refreshModel(e) {\n    const pageMostar = e.first / e.rows;\n\n    console.log('valores del e:', e);\n    this.crudService.getPagination(pageMostar == null ? 0 : pageMostar, e.rows == null ? 10 : e.rows, 'asc', 'idIngreso', 'ingreso', 'paginacion', e.filters)\n      .subscribe((res: any) => {\n        console.log(res);\n        this.db_ingreso = res.data;\n        this.totalRecords = res.totalCount;\n      });\n  }\n\n  borrarRegistro(data: any) {    \n    swal(MSJ_ALERT_BORRAR).then((res: any) => {\n      if (res.value) {\n        this.crudService.delete(data.idIngreso, 'ingreso', 'delete').subscribe(res => {\n          swal(MSJ_SUCCESS); this.refreshModel(this.filtrosActivos);\n        });\n      }\n    });\n  }\n\n  ShowChild() { this.showChild = !this.showChild }\n  onDeactivate() { this.ShowChild(); }\n  onActivate() { this.showChild = true; }\n}\n"],"sourceRoot":""}